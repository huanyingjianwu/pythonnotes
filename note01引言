

一、计算机组成

计算机的组成：输入设备【键盘鼠标】，输出设备【显示器，音响】，存储器，运算器和控制器

电脑的设备：

	键盘鼠标：告诉电脑进行什么操作

	显示器：展示画面【图形化界面】

	音响

	机箱：主板【是连接其他所有设备的载体】

		主板：cpu，内存，显卡，硬盘

			cpu:中央处理单元【Center Processing Unit】,被称为处理器，是计算机的运算核心和控制核心，对计算机起到协调和控制的作用	

			内存：负责硬盘等硬件设备上的数据和cpu之间的数据交换，缓存系统中的临时数据【tmp】

			硬盘：存储数据和软件的容器，特点：容量大，计算机被关机之后数据不会丢失，被称为数据仓库

			显卡：负责一切信息的显示

二、软件开发

1.软件开发

什么是软件：

	一系列按照特定顺序组织起来的计算机数据或者指令

	常用软件的分类：

		系统软件：Windows,Linux，Mac OS,iOS,Android等

		应用软件：一系列浏览器，一系列播放器等

什么是开发：

	简单来说，制作软件的过程	

	软件的出现的意义实现人与计算机之间的交互

	交互方式：

		图形化界面：

		命令行方式：在控制台输入命令，计算机根据命令执行相应的操作

2.DOS命令【Windows】

    """
    cd	路径：	change directory,进入指定目录
    cd..  :退回到上一级目录，退回到上上一级cd..\..
    cd/	:退回到根目录
    
    dir:列出当前路径下所有的内容，包含文件或者文件夹
    
    md xxx:创建目录
    rd xxx:删除指定目录，注意：只能删除空目录
    rd /s xxx:删除目录，不管是否为空，会提示是否需要删除，输入y才能删除【交互式删除】
    rd /s /q 路径：强制删除【谨慎使用】
    
    cd>xxx:创建非空文件，注意：文件中会有一行文本，文本为当前的路径
    type nul>xxx :创建空文件
    copy nul>xxx:创建非空文件，注意：注意：文件中会有一行文本【已复制一个文件】
    echo 文件内容>xxx:创建非空文件，文件内容可以自定义
    del xxxx:删除指定文件
    del /p xxx:在删除之前会进行询问，是否要删除【交互式删除】
    
    copy 源路径  目标路径:复制
    move 源路径  目标路径：移动
    
    ren 旧名称   新名称：重命名
    
    盘符:   切换盘符  
    
    cls:clear console,清屏
    """
    
    演示命令：
    C:\Users\Administrator>cd Desktop
    
    C:\Users\Administrator\Desktop>dir
     驱动器 C 中的卷没有标签。
     卷的序列号是 DAFF-9D5E
    
     C:\Users\Administrator\Desktop 的目录
    
    2019/06/18  09:34    <DIR>          .
    2019/06/18  09:34    <DIR>          ..
    2019/06/18  09:25        28,916,070 bandicam 2019-06-18 09-10-00-411.mp4
    2019/06/18  09:34        15,404,287 bandicam 2019-06-18 09-27-32-256.mp4
    2019/06/18  09:34           119,065 bandicam 2019-06-18 09-34-59-108.mp4
    2016/12/14  16:11        46,471,544 ChromeStandalone_55.0.2883.87_Setup.exe
    2018/03/15  21:18             1,343 HBuilder.exe.lnk
    2019/05/18  16:49    <DIR>          Python
    2019/06/17  17:08    <DIR>          XA-Python1903
                   5 个文件     90,912,309 字节
                   4 个目录  3,519,324,160 可用字节
    
    C:\Users\Administrator\Desktop>cd..
    
    C:\Users\Administrator>cd C:\Users\Administrator\Desktop
    
    C:\Users\Administrator\Desktop>cd/
    
    C:\>cd Users
    
    C:\Users>cd Administrator
    
    C:\Users\Administrator>cd Desktop
    
    C:\Users\Administrator\Desktop>md aaa
    
    C:\Users\Administrator\Desktop>rd aaa
    
    C:\Users\Administrator\Desktop>md aaa
    
    C:\Users\Administrator\Desktop>cd aaa
    
    C:\Users\Administrator\Desktop\aaa>md bbb
    
    C:\Users\Administrator\Desktop\aaa>cd..
    
    C:\Users\Administrator\Desktop>rd aaa
    目录不是空的。
    
    C:\Users\Administrator\Desktop>rd /s aaa
    aaa, 是否确认(Y/N)? y
    
    C:\Users\Administrator\Desktop>cat>a1.txt
    'cat' 不是内部或外部命令，也不是可运行的程序
    或批处理文件。
    
    C:\Users\Administrator\Desktop>cd>a1.txt
    
    C:\Users\Administrator\Desktop>type nul>a2.txt
    
    C:\Users\Administrator\Desktop>copy nul>a3.txt
    
    C:\Users\Administrator\Desktop>echo hello>a4.txt
    
    C:\Users\Administrator\Desktop>del a1.txt
    
    C:\Users\Administrator\Desktop>del /p a2.txt
    C:\Users\Administrator\Desktop\a2.txt，要删除(Y/N)吗? y
    
    C:\Users\Administrator\Desktop>ren a3.txt file1.txt
    
    C:\Users\Administrator\Desktop>md aaa
    
    C:\Users\Administrator\Desktop>copy a4.txt aaa\a4.txt
    已复制         1 个文件。
    
    C:\Users\Administrator\Desktop>move file1.txt aaa
    移动了         1 个文件。
    
    """
    相对路径：必须有一个参照，相对于某个其他路径的路径，不带有盘符
    绝对路径：带有盘符的路径
    """

三、Python简介

学习编程语言：学习语法规则

1》Python的发展史

	1989年被发明，第一个正式版本发布于1991年【Java被发布于1995年】

	1999年：支持网站开发【web开发】

	2000年：2.0版本，构成了现在Python语言的框架的基础

	2004年:2.4版本，Python的web框架Diango诞生

	2008年10月：2.6版本

	2008年12月：3.0版本【和之前的版本完全兼容】

	2008~2010：2.6.1 2.6.2 ......

	2010年：2.7版本

2》特点【面试题】：

	a.解释型语言【类似于php，开发过程中没有了编译环节，直接运行】

	b.交互式语言【可以在终端直接编程】

	c.面向对象语言【面向对象语言的三大特征：封装，继承，多态，类和对象是面向对象的核心】

	d.跨平台语言【可以运行在windows，Linux等不同的平台上】

	e.动态数据类型的语言【给变量重新赋值，可以修改变量的值，可以修改变量的类型】

3》优缺点【面试题】

优点：

	a.易于学习【语法比较简化】

	b.易于维护【项目在进行版本更新迭代的时候节约开发成本】

	c.可移植性【跨平台】

	d.可扩展性【如果需要运行一段比较关键的代码或者想要编写一些不愿开发的算法，可以通过c或者c++完成，在Python代码中进行调用】

	e.标准库【工具，Python中实现了模块，只需要根据需求进行调用】

	f.GUI【图形化界面，实现小游戏】

	g.可嵌入式【可以将Python嵌入到c或者c++中，可以让程序拥有脚本的功能】

缺点：

	a.运行速度慢【和c语言相比，Python是解释性语言，代码在执行的过程中会一行一行翻译成cpu能够识别的机器码】，这个翻译的过程耗时

	b.代码不能加密【如果要发布Python程序，实际上发布的是源代码】

4》Python的应用领域

	web开发【后端】

	爬虫

数据分析【数据统计】

	自动化测试

	运维

	人工智能【人脸识别，车牌识别，语音识别等】	

四、数据的存储

1.思考问题

a.计算机的作用

	存储数据，快速处理数据

b.数据存储在计算机的什么位置？

	数据存储在内存中

c.计算机怎样存储数据

	计算机是如何存储数字的

2.内存

内存：Memory,也被称为内存储器，作用：暂时存储cpu生成的运算数据，以及和硬盘等外部设备之间进行数据交换

在计算机中存储数据，采用的是开关原理【一个开关，有两种状态：打开和关闭，打开理解为1，关闭理解为0】

单位：

	计算机中表示数据的最小单位：比特【bit---->b】,又被称为位

	计算机中处理数据的最小单位：字节【Byte----->B】

	1B = 8b

	字节的单位：B,KB,MB,GB,TB,PB,EB....DB,之间的换算的值为1024

结论：计算机在内存中以二进制的方式存储数据	

3.进制

什么是进制？

	就是进位制，是已经被规定的一种进位方式，例如：逢十进一，逢二进一等

常见的进制：二进制，十进制，八进制，十六进制

不同进制的符号集：

	二进制：0和1

	十进制：0~9

	八进制：0~7，用数字0开头，例如：6表示十进制，06表示八进制

	十六进制：0~9和a~f【A~F】,用0x或者0X开头，例如：6表示十进制，06表示八进制，0x6表示十六进制

进制的表示方式：位置表示法

	例如：注：括号表示次方

	861:1-----》10（0）

	816:10---》10（1）

	168:100-----》10（2）

二进制的简单计算：

	0 + 0 = 0

	1 + 0= 1

	0 + 1 = 1

	1  + 1 = 10

	11 + 1 = 100	

4.进制的转换

a.十进制-----》二进制

	转换原理：对于整数，对十进制数进行除2运算，直到商为0为止，然后将各个步骤得到的余数倒着写出来

			   对于小数，整数部分同上，小数部分乘以2的运算，对结果取整，整数部分为1为止

	练习：求十进制数20的二进制

b.二进制------》十进制

	转换原理：将二进制数按照权【2】展开，相加就可以得到对应的十进制

	0000 0110-------》1 * 2（2） + 1 * 2（1） = 6

	0000 1010------》1 * 2（3） + 1 * 2（1） = 10

	1001 0110------》150

c.二进制-----》八进制

	转换原理：将二进制数进行分组，从右往左没三位为一组，不足时补0，然后将每组中的二进制转换为十进制，最后将计算的十进制连接起来

	1001 0110------》010     010    110-------》2 2 6------》0226

	1010001-------》001   010   001------》1 2 1------》0121

d.二进制-----》十六进制

	转换原理：将二进制数进行分组，从右往左没四位为一组，不足时补0，然后将每组中的二进制转换为十进制，最后将计算的十进制连接起来

	1001 0110-----》9  6-----》0x96

	1010001-----》0101   0001-------》5 1-----》0x51

	1011 1110-----》11  14------》b    e------>0xbe

	111011-------》0011    1011-----》3   11----->0x3b

e.十进制-----》八进制或者十六进制

	转换原理：

		方式一：先将十进制转换为二进制，然后对二进制进行分组，再转换为八进制或者十六进制

		方式二：类似十进制转换为二进制，直接对十进制进行除以8或者16求余的运算

f.八进制或者十六进制------》十进制

	转换原理：将二进制数按照权【8或者16】展开，相加就可以得到对应的十进制		

5.原码反码补码

数值有正负之分，原码反码补码主要是针对负数出现的

表示方式：

	a.原码：一个数的二进制表示形式，最高位表示符号位，1表示负数，0表示正数

	b.反码：将原码除了符号位之外剩余位进行取反【0---》1,1----》0】	

	c.补码：在反码的基础上加1【0000 0001】	

注意：三个码主要针对的是负数，对于正数而言，原码反码补码都是同一个，都是该数的二进制

	举例：6，原码反码补码都是0000 0110	

举例：10 + （-10） = 0 【以8位为例】

    原码：
    	10:0000 1010
    +  -10:1000 1010
    ------------------
    	   1001 0100------》结论：计算机底层存储数据的时候采用的不是原码
    
    反码：
    	10:0000 1010
    +   -10:1111 0101
    ------------------
    	   1111 1111------>结论：计算机底层存储数据的时候采用的不是反码
    	  
    	1111 1110【反】-----》1111 1111【补】，1111 1111是-1的补码	
        
    补码：
    	10:0000 1010
    +  -10:1111 0110
    ------------------
    	 0000 0000
    	   
    结论：在计算机底层，存储数据和参与运算的数据都是以补码的形式存在的	
    
    注意：补码是为了让计算机识别的，原码是为了让程序员识别的
    
    1111 0101-----》反-----》原	

练习：

	1.计算十进制数-15的补码

	15：0000 1111

	-15：原：1000 1111-----》反：1111 0000-----》补：1111 0001

	2.计算8 + （-11）

	8：0000 1000

	11：0000 1011

	-11：原：1000 1011----》反：1111 0100------》补：1111 0101

	0000 1000

	1111 0101

---

	1111 1101【补】-------》1111 1100【反】-------》1000 0011【原】，-3的原码

6.编码

如果存储的是数字，则可以将数字转换为二进制进行存储，但是如果存储文本【中文，英文，特殊符号等】如何存储？解决办法是通过编码

a------->0

b------->1

c-------->2

存储除了数字之外的其他类型的数据的时候【文本，图片，音视频等】，将这些数据转换为和数字有对应关系的映射表【ASCII码】

特殊：48----》字符0		65-----》大写字母A      97------>小写字母a

五、开发前的准备工作

目前Python版本分为两类：Python2.x和Python3.x

一般安装Python环境：Python官网

注意：安装Python环境一定要设置环境变量【Add path to enviroment】,设置环境变量为了在任意的目录下可以进入Python的环境

pycharm:安装社区版本【任意的文本编辑器都可以书写python代码，比如：Editplus,notepad++.sublime】

六、其他

1.注释

注释是编写程序的时候，书写程序的人给程序做解释性文字说明和提示，能提高代码的可读性，方便后期的维护

特点：不影响代码的正常运行，会被程序跳过

形式：

	a.单行注释：#xxxxxx

	b.多行注释："""xxxx"""   '''xxxxx'''

注意：

	a.在编程语言中，文本【包括中文】在代码中出现的形式，要么是注释，要么是字符串

	b.多行注释中可以嵌套单行注释，多行注释中尽量不要嵌套同种类型的多行注释

	c.建议：尽量多写注释

2.编码规范

a.一行一条语句

b.涉及到符号，尽量在符号的前后添加空格

c.通过缩进来区分代码块【4个空格，在pycharm中，可以通过enter，实际上，tab键可以代替4个空格】

d.不管是项目还是文件命名，或者是变量，函数以及类等的命名，尽量不要出现中文

e.一行代码中的字符数量尽量不要超多80个字符

2.关键字

在Python中已经被赋予了特殊含义的英文单词

举例：break,continue,from,import,finally,try,as等

3.标识符

需要在书写代码的过程中自定义的符号

定义合法标识符的规则：

	a.只能由数字，字母和下划线组成

	b.不能使用除了下划线之外的特殊符号

	c.不能使用中文或者空格

	d.不能使用关键字

	e.不能以数字开头

	f.严格区分大小写，例如：a和A属于两个完全不同的标识符

定义标识符的规范：

	a.尽量让标识符见名知意：具有描述性

	b.遵循法则：

		方式一：驼峰命名法【通过单词的首字母大写分隔】

			小驼峰：xxxXxxxXxx,举例：stuScore,常用于变量名，函数名

			大驼峰：XxxXxxxXxx,举例：StuScore，常用于类名

		方式二：Python官方建议的写法【单词全小写，不同单词之间使用下划线分隔】

			举例：stu_score

作用：给变量，函数和类进行命名，为了区分

4.Python常用的数据类型

计算机主要用于处理生活中的数据，生活中的数据各种各种，为了处理不同的数据，Python提供了各种不同的数据类型

常用的数据类型：

	number:数字型【整型，浮点型，复数】

	string：字符串型【单引号或者双引号表示的任意文本】

	boolean:布尔型【只有True和False两个表示】

	None:空值

	list:列表

	tuple：元组

	dict；字典

	set【collection】:集合

数字型：

	整型：Python中的整型可以处理任意大小的整数【注意：python2.x中有int和long两种整型，Python3.x中只有int】,而且支持二进制

	浮点型：在计算机底层，浮点型是以科学计数法表示，比如：123.456-----》1.23456e2

	复数:数学：a + bi,Python中的复数只需要将数学上的i换成j，Python：a + bj,a被称为实部，b被称为虚部

字符串：

	使用单引号或者双引号括起来的任意文本，文本包括字母，数字，特殊符号，中文等

布尔型：

	如果一种情景只有两种状态，则首选布尔值，只有两个值：True和False，一般用于条件的判断




